<script type="text/javascript">
    const runTest = function(){
        describe( 'Elium App should:',  ()=>{
            <% if (process.env.NODE_ENV === "development") {%>
                var main = $(".standard-day-block#playground")
            <% } else { %>
                var main = $("jasmine-testground")
            <% } %>
            var submitButton = main.find("input[type='submit']")
            var input = main.find("input[type='text']")
            var tableBody = main.find('tbody')

            beforeAll(() => {
            })

            it('have a sumit button', () => {
                expect(submitButton.get(0)).toBeDefined()
            })
            it('have an input field', () => {
                expect(input.get(0)).toBeDefined()
            })
            it('have an table body', () => {
                expect(tableBody.get(0)).toBeDefined()
            })
            it('add new names and surnames to the table', () => {
                input.val("pedro favuzzi")
                submitButton.click()

                input.val("banana split")
                submitButton.click()

                input.val("super man")
                submitButton.click()
                var expected = 0
                tableBody.find("tr").each((i, ele) => {
                    const children = $(ele).children()
                    if (["Pedro", "Banana", "Super" ].includes($(children[0]).text()) ) expected +=1
                    if (["F.", "S.", "M." ].includes($(children[1]).text()) ) expected +=1
                        $(children[1]).mouseenter()
                })
                expect(expected).toEqual(6)
            })

        })
    }

    axios.get("<%= view.solution %>.html")
        .then(function(response) {
            $(".jasmine-testground").append(response.data)
            JasmineBoot()
            runTest()
            exercuteTest()
        })

</script>
<!-- style="display: none" -->
<div class="jasmine_html-reporter"></div>

<div class="jasmine-testground" >
</div>